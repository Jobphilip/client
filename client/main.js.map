{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.service.ts","./src/app/books.service.ts","./src/app/component/book-list/book-list.component.ts","./src/app/component/book-list/book-list.component.html","./src/app/component/book-list/book.model.ts","./src/app/component/book/author.model.ts","./src/app/component/book/book.component.ts","./src/app/component/book/book.component.html","./src/app/component/contact/contact.component.ts","./src/app/component/contact/contact.component.html","./src/app/component/edit-author/edit-author.component.ts","./src/app/component/edit-author/edit-author.component.html","./src/app/component/edit-book/edit-book.component.ts","./src/app/component/edit-book/edit-book.component.html","./src/app/component/header/header.component.ts","./src/app/component/header/header.component.html","./src/app/component/home/home.component.ts","./src/app/component/home/home.component.html","./src/app/component/login/login.component.ts","./src/app/component/login/login.component.html","./src/app/component/new-book/new-book.component.ts","./src/app/component/new-book/new-book.component.html","./src/app/component/register/register.component.ts","./src/app/component/register/register.component.html","./src/app/new-author/new-author.component.ts","./src/app/new-author/new-author.component.html","./src/app/shared/book.service.ts","./src/app/token-interceptor.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACR;AAE0B;AACK;AACZ;AACQ;AACX;AACe;AACH;AACJ;AACY;AAErB;;;AAE9D,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAC,SAAS,EAAE,SAAS,EAAC,qFAAgB,EAAC;IAC7C,EAAE,IAAI,EAAC,OAAO,EAAE,SAAS,EAAC,+EAAc,EAAC;IACzC,EAAE,IAAI,EAAC,UAAU,EAAE,SAAS,EAAC,wFAAiB,EAAC;IAC/C,EAAE,IAAI,EAAC,MAAM,EAAE,SAAS,EAAC,4EAAa,EAAC;IACvC,EAAC,IAAI,EAAC,WAAW,EAAC,SAAS,EAAC,0FAAiB,EAAC,WAAW,EAAE,CAAC,4DAAS,CAAC,EAAC;IACvE,EAAC,IAAI,EAAC,WAAW,EAAC,SAAS,EAAC,0FAAiB,EAAC,WAAW,EAAE,CAAC,4DAAS,CAAC,EAAC;IACvE,EAAC,IAAI,EAAC,UAAU,EAAC,SAAS,EAAC,uFAAgB,EAAC,WAAW,EAAE,CAAC,4DAAS,CAAC,EAAC;IACrE,EAAC,IAAI,EAAC,YAAY,EAAC,SAAS,EAAC,oFAAkB,EAAC,WAAW,EAAE,CAAC,4DAAS,CAAC,EAAC;IACzE,EAAC,IAAI,EAAC,aAAa,EAAC,SAAS,EAAC,iGAAmB,EAAC,WAAW,EAAE,CAAC,4DAAS,CAAC,EAAC;IAC3E,EAAC,IAAI,EAAC,SAAS,EAAC,SAAS,EAAC,6EAAa,EAAC;CACxC,CAAC;AAMI,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;;;ICShC,wEAAwI;IAAA,gEAAK;IAAA,4DAAI;;;IAIjJ,wEAA0G;IAAA,mEAAQ;IAAA,4DAAI;;;IAItH,wEAAsI;IAAA,kEAAO;IAAA,4DAAI;;;IAIjJ,wEAA4G;IAAA,qEAAU;IAAA,4DAAI;;;IAa5H,wEAAmG;IAAA,gEAAK;IAAA,4DAAI;;;IAC5G,wEAAuG;IAAA,mEAAQ;IAAA,4DAAI;;;;IACnH,wEAAgH;IAApC,oRAAS,gCAAyB,IAAC;IAAC,iEAAM;IAAA,4DAAI;;AD1B3H,MAAM,YAAY;IAEvB,YAAmB,YAAwB,EAAS,OAAc;QAA/C,iBAAY,GAAZ,YAAY,CAAY;QAAS,YAAO,GAAP,OAAO,CAAO;QADlE,UAAK,GAAG,OAAO,CAAC;IACoD,CAAC;;wEAF1D,YAAY;4FAAZ,YAAY;QCVzB,yEACI;QAAA,uEAAuC;QAAA,gEAAK;QAAA,4DAAI;QAChD,4EACE;QAAA,qEAAyC;QAC3C,4DAAS;QAET,yEACE;QAAA,wEACE;QAAA,wEACE;QAAA,oGAAwI;QAC1I,4DAAK;QAEN,wEACG;QAAA,sGAA0G;QAC5G,4DAAK;QAEL,yEACE;QAAA,uGAAsI;QACxI,4DAAK;QAEL,yEACE;QAAA,uGAA4G;QAC9G,4DAAK;QAMR,4DAAK;QAIJ,0EAEE;QAAA,uGAAmG;QACnG,uGAAuG;QACvG,uGAAgH;QAClH,4DAAK;QAIP,4DAAM;QACR,4DAAM;QACN,uEAAqB;QACvB,4EAA+B;;QAnCuB,0DAAiE;QAAjE,qIAAiE;QAIlE,0DAAoC;QAApC,kGAAoC;QAIrC,0DAAiE;QAAjE,qIAAiE;QAI9D,0DAAoC;QAApC,kGAAoC;QAa/D,0DAAgC;QAAhC,8FAAgC;QAC/B,0DAAgC;QAAhC,8FAAgC;QACT,0DAA+B;QAA/B,6FAA+B;;6FD1BtE,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACQ;AACzB;AACe;AACT;AAE2B;AAC3B;AACN;AAEI;AACyB;AAEG;AAEH;AACN;AAEY;AACT;AACW;AACH;AACG;AACd;AACZ;AACmB;AACW;;AAoC3E,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBART,CAAC,yDAAW,EAAC,qDAAS,EAAC,2DAAY,EAAC,iEAAW;QACxD;YACE,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,kFAAuB;YACjC,KAAK,EAAC,IAAI;SACX,CAAC,YAbK;YACP,uEAAa;YACb,0DAAW;YACX,kEAAmB;YACnB,qEAAgB;YAChB,oEAAgB;SAEjB;mIASU,SAAS,mBA/BlB,2DAAY;QACZ,sFAAgB;QAChB,mFAAe;QACf,6EAAa;QACb,yFAAiB;QACjB,gFAAc;QACd,2FAAiB;QACjB,wFAAgB;QAChB,2FAAiB;QACjB,6EAAa;QACb,oFAAkB;QAClB,iGAAmB,aAKnB,uEAAa;QACb,0DAAW;QACX,kEAAmB;QACnB,qEAAgB;QAChB,oEAAgB;6FAWP,SAAS;cAjCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,sFAAgB;oBAChB,mFAAe;oBACf,6EAAa;oBACb,yFAAiB;oBACjB,gFAAc;oBACd,2FAAiB;oBACjB,wFAAgB;oBAChB,2FAAiB;oBACjB,6EAAa;oBACb,oFAAkB;oBAClB,iGAAmB;iBAGpB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,0DAAW;oBACX,kEAAmB;oBACnB,qEAAgB;oBAChB,oEAAgB;iBAEjB;gBACD,SAAS,EAAE,CAAC,yDAAW,EAAC,qDAAS,EAAC,2DAAY,EAAC,iEAAW;oBACxD;wBACE,OAAO,EAAE,sEAAiB;wBAC1B,QAAQ,EAAE,kFAAuB;wBACjC,KAAK,EAAC,IAAI;qBACX,CAAC;gBACJ,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC7DD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAOpC,MAAM,SAAS;IACrB,YAAoB,YAAwB,EAC1B,OAAc;QADZ,iBAAY,GAAZ,YAAY,CAAY;QAC1B,YAAO,GAAP,OAAO,CAAO;IAAG,CAAC;IAC1B,WAAW;QACT,IAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAC;YAC9B,OAAO,IAAI;SACZ;aACG;YACF,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;YACjC,OAAO,KAAK;SACb;IAEH,CAAC;;kEAZC,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;6FAEP,SAAS;cAHrB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAQpC,MAAM,WAAW;IAOtB,YAAoB,IAAgB,EAAU,OAAe;QAAzC,SAAI,GAAJ,IAAI,CAAY;QAAU,YAAO,GAAP,OAAO,CAAQ;QALpD,iBAAY,GAAG,eAAe,CAAC;QAE/B,cAAS,GAAS,YAAY,CAAC;IAGyB,CAAC;IAElE,YAAY,CAAC,IAAI;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,YAAY,EAAC,IAAI,CAAC;IACnD,CAAC;IACD,SAAS,CAAC,IAAI;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,SAAS,EAAC,IAAI,CAAC;IAChD,CAAC;IACD,QAAQ;QACN,OAAO,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;IACxC,CAAC;IACH,aAAa;QACX,IAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAE,OAAO,EAAC;YACxC,OAAO,IAAI,CAAC;SACf;aACK;YACF,OAAO,KAAK,CAAC;SACd;IAEH,CAAC;IACD,YAAY;QACV,IAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAE,MAAM,EAAC;YACvC,OAAO,IAAI,CAAC;SACf;aACK;YACF,OAAO,KAAK,CAAC;SACd;IAEH,CAAC;IACC,UAAU;QACR,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IACD,QAAQ;QACN,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC;IACtC,CAAC;;sEA1CU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAUpC,MAAM,YAAY;IAKvB,YAAoB,IAAe,EAAU,WAAuB;QAAhD,SAAI,GAAJ,IAAI,CAAW;QAAU,gBAAW,GAAX,WAAW,CAAY;IAAI,CAAC;IACzE,QAAQ;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IACrC,CAAC;IACD,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IACvC,CAAC;IAED,OAAO,CAAC,IAAI;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAC,EAAC,MAAM,EAAC,IAAI,EAAC,CAAC;aACjD,SAAS,CAAC,IAAI,GAAE,GAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAC,CAAC;IACvC,CAAC;IACD,SAAS,CAAC,IAAI;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;aACvD,SAAS,CAAC,IAAI,GAAE,GAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAC,CAAC;IACvC,CAAC;IAED,QAAQ,CAAC,IAAI;QAEX,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAC,EAAC,MAAM,EAAC,IAAI,EAAC,CAAC;aAC/C,SAAS,CAAC,IAAI,GAAE,GAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAC,CAAC;IAEvC,CAAC;IACD,UAAU,CAAC,IAAI;QAEb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,CAAC;aACrD,SAAS,CAAC,IAAI,GAAE,GAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAC,CAAC;IAEvC,CAAC;IAED,MAAM,CAAC,IAAI;QACT,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAE3B,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IACD,UAAU,CAAC,MAAM;QACf,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;QAE3B,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;IAED,EAAE;QACA,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACD,GAAG;QACD,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,IAAI;QACT,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAC,EAAC,MAAM,EAAC,IAAI,EAAC,CAAC;aACjD,SAAS,CAAC,IAAI,GAAE,GAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAC,CAAC;IAEvC,CAAC;IACD,UAAU,CAAC,MAAM;QACf,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAC,EAAC,QAAQ,EAAC,MAAM,EAAC,CAAC;aACzD,SAAS,CAAC,IAAI,GAAE,GAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAC,CAAC;IAEvC,CAAC;;wEAlEU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;6FAEP,YAAY;cAHxB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIO;;;;;;;ICcjC,qEAAyC;IAAA,iEAAM;IAAA,4DAAK;;;;IAmBpD,6EAAgI;IAAjF,0ZAAqB;IAA4D,+DAAI;IAAA,4DAAS;;;;IAC7I,6EAAiI;IAApF,6ZAAwB;IAA4D,iEAAM;IAAA,4DAAS;;;IAfrJ,qEACI;IAAA,qEAAI;IAAA,oEAIP;IAAA,4DAAK;IACL,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAC/B,sEAAI;IAAA,wDAAqB;IAAA,4DAAK;IAE9B,sEACI;IACA,2HAAgI;IAChI,2HAAiI;IAErI,4DAAK;IAEN,4DAAK;;;;IAhBA,0DAA8B;IAA9B,2FAA8B;IAFtB,8IAAqB;IAK7B,0DAAmB;IAAnB,iFAAmB;IACnB,0DAAmB;IAAnB,iFAAmB;IACnB,0DAAqB;IAArB,mFAAqB;IACrB,0DAAsB;IAAtB,oFAAsB;IACtB,0DAAqB;IAArB,mFAAqB;IAIX,0DAAoC;IAApC,qGAAoC;IACtC,0DAAoC;IAApC,qGAAoC;;AD1B7D,MAAM,iBAAiB;IAM3B,YAAoB,YAAyB,EAAS,MAAa,EAAQ,YAAwB;QAA/E,iBAAY,GAAZ,YAAY,CAAa;QAAS,WAAM,GAAN,MAAM,CAAO;QAAQ,iBAAY,GAAZ,YAAY,CAAY;QALnG,UAAK,GAAU,WAAW,CAAC;QAE5B,eAAU,GAAS,GAAG,CAAC;QACvB,gBAAW,GAAS,EAAE,CAAC;QACvB,cAAS,GAAY,KAAK,CAAC;IAG1B,CAAC;IACD,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;IAED,IAAI,CAAC,IAAI;QACR,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC;IAED,MAAM,CAAC,IAAI;QACT,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC;QAC9B,QAAQ,CAAC,MAAM,EAAE,CAAC;IAEpB,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE;aAC3B,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;YACjB,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9C,CAAC,EACD,CAAC,GAAG,EAAC,EAAE;YACL,IAAG,GAAG,YAAY,sEAAiB,EAAC;gBAClC,IAAG,GAAG,CAAC,MAAM,IAAE,GAAG,EAAC;oBAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;iBAAC;aACrD;QACJ,CAAC,CACA;IACH,CAAC;;kFApCU,iBAAiB;iGAAjB,iBAAiB;QCZ9B,yEACI;QAAA,yEACI;QAAA,uDAEJ;QAAA,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,2EACI;QAAA,wEACI;QAAA,qEACI;QAAA,gEAEK;QACL,qEAAI;QAAA,qEAAS;QAAA,4DAAK;QAClB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,6GAAyC;QAE7C,4DAAK;QACT,4DAAQ;QACR,yEACG;QAAA,+GACI;QAmBP,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QAEV,4DAAM;QAGV,4DAAM;;QAhDE,0DAEJ;QAFI,qFAEJ;QAcwB,2DAAoC;QAApC,kGAAoC;QAKzC,0DAA0B;QAA1B,8EAA0B;;6FDXpC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEXD;AAAA;AAAO,MAAM,SAAS;IAClB,YACO,MAAe,EACf,QAAiB,EACjB,QAAiB,EACjB,UAAmB,EACnB,WAAoB,EACpB,KAAc,EACd,UAAmB,EACnB,QAAiB;QAPjB,WAAM,GAAN,MAAM,CAAS;QACf,aAAQ,GAAR,QAAQ,CAAS;QACjB,aAAQ,GAAR,QAAQ,CAAS;QACjB,eAAU,GAAV,UAAU,CAAS;QACnB,gBAAW,GAAX,WAAW,CAAS;QACpB,UAAK,GAAL,KAAK,CAAS;QACd,eAAU,GAAV,UAAU,CAAS;QACnB,aAAQ,GAAR,QAAQ,CAAS;IAAE,CAAC;CAC9B;;;;;;;;;;;;;ACVD;AAAA;AAAO,MAAM,WAAW;IACpB,YACO,UAAmB,EACnB,UAAmB,EACnB,WAAoB,EACpB,QAAiB;QAHjB,eAAU,GAAV,UAAU,CAAS;QACnB,eAAU,GAAV,UAAU,CAAS;QACnB,gBAAW,GAAX,WAAW,CAAS;QACpB,aAAQ,GAAR,QAAQ,CAAS;IAAE,CAAC;CAC9B;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAIO;;;;;;;;ICyBjC,4EAAwI;IAAzF,gaAA6B;IAA4D,+DAAI;IAAA,4DAAS;;;;IACrJ,6EAAuI;IAA1F,gaAA8B;IAA4D,iEAAM;IAAA,4DAAS;;;IAZ3J,qEACI;IAAA,qEAAI;IAAA,oEAIP;IAAA,4DAAK;IACL,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,qEAAI;IAAA,uDAAwB;IAAA,4DAAK;IAEjC,qEACI;IAAA,uHAAwI;IACxI,uHAAuI;IAE3I,4DAAK;IAEN,4DAAK;;;;IAbA,0DAA8B;IAA9B,2FAA8B;IAFtB,gJAAuB;IAK/B,0DAAuB;IAAvB,qFAAuB;IACvB,0DAAuB;IAAvB,qFAAuB;IACvB,0DAAwB;IAAxB,sFAAwB;IAGd,0DAAoC;IAApC,qGAAoC;IACtC,0DAAoC;IAApC,qGAAoC;;ADjB7D,MAAM,aAAa;IAOxB,YAAoB,YAAyB,EAAS,MAAa,EAAQ,YAAwB;QAA/E,iBAAY,GAAZ,YAAY,CAAa;QAAS,WAAM,GAAN,MAAM,CAAO;QAAQ,iBAAY,GAAZ,YAAY,CAAY;QANnG,UAAK,GAAU,cAAc,CAAC;QAE9B,eAAU,GAAS,GAAG,CAAC;QACvB,gBAAW,GAAS,EAAE,CAAC;QACvB,cAAS,GAAY,KAAK,CAAC;IAE4E,CAAC;IAExG,WAAW;QACT,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;IACnC,CAAC;IAED,UAAU,CAAC,MAAM;QAChB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;IACxC,CAAC;IAED,UAAU,CAAC,MAAM;QACf,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC;QACpC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAEpB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE;aAC7B,SAAS,CAAC,CAAC,IAAI,EAAC,EAAE;YACjB,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAChD,CAAC,EACD,CAAC,GAAG,EAAC,EAAE;YACL,IAAG,GAAG,YAAY,sEAAiB,EAAC;gBAClC,IAAG,GAAG,CAAC,MAAM,IAAE,GAAG,EAAC;oBAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;iBAAC;aACrD;QACJ,CAAC,CACA;IACH,CAAC;;0EApCU,aAAa;6FAAb,aAAa;QCb1B,yEACI;QAAA,yEACI;QAAA,uDAEJ;QAAA,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,2EACI;QAAA,wEACI;QAAA,qEACI;QAAA,gEAAS;QACT,qEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QAExB,4DAAK;QACT,4DAAQ;QACR,yEACG;QAAA,2GACI;QAgBP,4DAAQ;QACZ,4DAAQ;QACZ,4DAAM;QAEV,4DAAM;QAGV,4DAAM;;QAxCE,0DAEJ;QAFI,qFAEJ;QAcmB,2DAA8B;QAA9B,gFAA8B;;6FDLxC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCLzB,uEACI;QAAA,yEACI;QAAA,yEACE;QAAA,qEAAI;QAAA,oEAAG;QAAA,0EAAe;QAAA,4DAAI;QAAA,4DAAK;QAC/B,gEACA;QAAA,qEAAI;QAAA,6FAAkC;QAAA,4DAAK;QAAC,gEAE5C;QAAA,wEAAgB;QAAA,qEAAG;QAAA,+EAAmB;QAAA,4DAAI;QAAA,sEAAU;QAAA,4DAAI;QACxD,wEAAgB;QAAA,qEAAG;QAAA,mEAAO;QAAA,4DAAI;QAAA,wEAAoB;QAAA,yEAAa;QAAA,4DAAI;QAAA,4DAAI;QACvE,wEAAgB;QAAA,qEAAG;QAAA,uEAAW;QAAA,4DAAI;QAAA,mEAAa;QAAA,wEAA0B;QAAA,yEAAa;QAAA,4DAAI;QAAC,iEAE3F;QAAA,iEAEA;QAJA,4DAAgB;QAIhB,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,iEAEA;QAAA,wEAAgB;QAAA,qEAAI;QAAA,sEAAS;QAAA,4DAAI;QAAA,sEAAU;QAAA,4DAAI;QAC/C,wEAAgB;QAAA,qEAAG;QAAA,kEAAM;QAAA,4DAAI;QAAC,gEAAG;QAAA,4DAAI;QACrC,wEAAgB;QAAA,qEAAG;QAAA,sEAAU;QAAA,4DAAI;QAAA,kEAAM;QAAA,4DAAI;QAC7C,4DAAM;QACV,4DAAM;QAGN,4DAAO;;6FDlBF,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACC;;;;;;AAU5C,MAAM,mBAAmB;IAG9B,YAAoB,YAAyB,EAAS,MAAa,EAAS,WAAuB;QAA/E,iBAAY,GAAZ,YAAY,CAAa;QAAS,WAAM,GAAN,MAAM,CAAO;QAAS,gBAAW,GAAX,WAAW,CAAY;QAFnG,eAAU,GAAG,IAAI,8DAAW,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IAEqD,CAAC;IAExG,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;IAC5C,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,0DAA0D,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACrG,KAAK,CAAC,QAAQ,CAAC;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;;sFAdU,mBAAmB;mGAAnB,mBAAmB;QCXhC,yEACI;QAAA,0EACI;QADE,+IAAY,gBAAY,IAAC;QAC3B,oEAEM;QACN,yEACI;QAAA,yEACI;QAAA,2EACI;QAAA,wEAGI;QAAA,qEACI;QAAA,qEAAI;QAAA,wEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAAA,4DAAK;QACnC,sEAAI;QAAA,4EAAuE;QAAtC,uMAAoC;QAArE,4DAAuE;QAAA,4DAAK;QACpF,4DAAK;QAEL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAAA,4DAAK;QACnC,sEAAI;QAAA,4EAAuE;QAAtC,uMAAoC;QAArE,4DAAuE;QAAA,4DAAK;QACpF,4DAAK;QAGL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QAAA,4DAAK;QAC7B,sEAAI;QAAA,4EAAwE;QAAvC,wMAAqC;QAAtE,4DAAwE;QAAA,4DAAK;QACrF,4DAAK;QACL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,2EAAe;QAAA,4DAAQ;QAAA,4DAAK;QACvC,sEAAI;QAAA,4EAAsE;QAApC,qMAAkC;QAApE,4DAAsE;QAAA,4DAAK;QACnF,4DAAK;QACL,sEACI;QAAA,iEAAS;QACT,sEAAI;QAAA,wEAAqC;QAAA,4DAAK;QAClD,4DAAK;QACT,4DAAQ;QACZ,4DAAQ;QAEZ,4DAAM;QACV,4DAAM;QACV,4DAAO;QAEX,4DAAM;;QA5B2D,2DAAoC;QAApC,8FAAoC;QAKpC,0DAAoC;QAApC,8FAAoC;QAMpC,0DAAqC;QAArC,+FAAqC;QAIpC,0DAAkC;QAAlC,4FAAkC;;6FDjBvF,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACE;;;;;;AAU7C,MAAM,iBAAiB;IAG5B,YAAoB,YAAyB,EAAS,MAAa,EAAS,WAAuB;QAA/E,iBAAY,GAAZ,YAAY,CAAa;QAAS,WAAM,GAAN,MAAM,CAAO;QAAS,gBAAW,GAAX,WAAW,CAAY;QAFnG,aAAQ,GAAG,IAAI,+DAAS,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IAEqC,CAAC;IAExG,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC;IACzC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,sDAAsD,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC7F,KAAK,CAAC,QAAQ,CAAC;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC;;kFAdU,iBAAiB;iGAAjB,iBAAiB;QCX9B,yEACI;QAAA,0EACI;QADE,6IAAY,cAAU,IAAC;QACzB,oEAEM;QACN,yEACI;QAAA,yEACI;QAAA,2EACI;QAAA,wEACI;QAAA,qEACI;QAAA,qEAAI;QAAA,wEAAO;QAAA,mEAAO;QAAA,4DAAQ;QAAA,4DAAK;QAC/B,sEAAI;QAAA,4EAA+D;QAAhC,+LAA8B;QAA7D,4DAA+D;QAAA,4DAAK;QAC5E,4DAAK;QAEL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QAAA,4DAAK;QACjC,sEAAI;QAAA,4EAAmE;QAAlC,iMAAgC;QAAjE,4DAAmE;QAAA,4DAAK;QAChF,4DAAK;QAEL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QAAA,4DAAK;QAC7B,sEAAI;QAAA,4EAAmE;QAAlC,iMAAgC;QAAjE,4DAAmE;QAAA,4DAAK;QAChF,4DAAK;QAEL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAAA,4DAAK;QACnC,sEAAI;QAAA,4EAAqE;QAApC,mMAAkC;QAAnE,4DAAqE;QAAA,4DAAK;QAClF,4DAAK;QAEL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,4EAAgB;QAAA,4DAAQ;QAAA,4DAAK;QACxC,sEAAI;QAAA,6EAAsE;QAArC,oMAAmC;QAApE,4DAAsE;QAAA,4DAAK;QACnF,4DAAK;QACL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,2EAAe;QAAA,4DAAQ;QAAA,4DAAK;QACvC,sEAAI;QAAA,6EAAuE;QAApC,mMAAkC;QAArE,4DAAuE;QAAA,4DAAK;QACpF,4DAAK;QACL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,yEAAa;QAAA,4DAAQ;QAAA,4DAAK;QACrC,sEAAI;QAAA,6EAAoE;QAAlC,iMAAgC;QAAlE,4DAAoE;QAAA,4DAAK;QACjF,4DAAK;QACL,sEACI;QAAA,iEAAS;QACT,sEAAI;QAAA,wEAAqC;QAAA,4DAAK;QAClD,4DAAK;QACT,4DAAQ;QACZ,4DAAQ;QAEZ,4DAAM;QACV,4DAAM;QACV,4DAAO;QAEX,4DAAM;;QAzCyD,2DAA8B;QAA9B,wFAA8B;QAK5B,0DAAgC;QAAhC,0FAAgC;QAKhC,0DAAgC;QAAhC,0FAAgC;QAKhC,0DAAkC;QAAlC,4FAAkC;QAKlC,0DAAmC;QAAnC,6FAAmC;QAIjC,0DAAkC;QAAlC,4FAAkC;QAInC,0DAAgC;QAAhC,0FAAgC;;6FD5BrF,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAS3C,MAAM,eAAe;IAC1B,YAAoB,MAAa,EAAS,WAAuB;QAA7C,WAAM,GAAN,MAAM,CAAO;QAAS,gBAAW,GAAX,WAAW,CAAY;QAEjE,UAAK,GAAU,OAAO,CAAC;IAF8C,CAAC;IAGtE,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCT5B,qEAAI;QAAA,uDAAS;QAAA,4DAAK;QAClB,wEAAyB;QACzB,sEAAqB;QACrB,2EAA+B;QAE/B,yEACI;QAAA,uEAAkB;QAAA,gEAAK;QAAA,4DAAI;QAC3B,uEAA2B;QAAA,gEAAK;QAAA,4DAAI;QACpC,wEAAyB;QAAA,+DAAG;QAAA,4DAAI;QAChC,wEAA0B;QAAA,oEAAQ;QAAA,4DAAI;QACtC,wEAAwB;QAAA,kEAAM;QAAA,4DAAI;QAClC,wEAAwB;QAAA,kEAAK;QAAA,4DAAI;QACjC,wEAAwB;QAAA,kEAAM;QAAA,4DAAI;QAEtC,4DAAM;;QAdF,0DAAS;QAAT,0EAAS;sBDSA,eAAe;6FAAf,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,yEACQ;QAAA,yEACI;QACA,yEACI;QAAA,0EACK;QAAA,sEAAK;QAAA,2EAAgB;QAAA,4DAAM;QAChC,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;;6FDFG,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAU3C,MAAM,cAAc;IAGzB,YAAoB,YAAyB,EACnC,OAAc;QADJ,iBAAY,GAAZ,YAAY,CAAa;QACnC,YAAO,GAAP,OAAO,CAAO;QAFxB,kBAAa,GAAG,EAAC,KAAK,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,CAAC;IAEV,CAAC;IAE9B,QAAQ;IACR,CAAC;IACD,SAAS;QAGX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QACxC,IAAG,IAAI,CAAC,aAAa,CAAC,KAAK,IAAE,qBAAqB,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,IAAE,eAAe,EAAC;YACjG,YAAY,CAAC,OAAO,CAAC,OAAO,EAAC,OAAO,CAAC;YACrC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;SAC7B;aACG;YACF,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC;iBAC9C,SAAS,CACR,GAAG,GAAE;gBACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC;gBACtB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBAC1C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;YAE9B,CAAC,EACD,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CACxB;SACF;IAIC,CAAC;;4EAhCU,cAAc;8FAAd,cAAc;QCV3B,gEAAI;QAAA,gEAAI;QAAA,gEAAI;QAAA,wEAAyI;QAAA,gEAAK;QAAA,4DAAK;QAAA,gEAAI;QAAA,gEAAI;QAAA,gEACjK;QAAA,yEACM;QAAA,yEACA;QAAA,sEAA2C;QACvC,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,qEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,+EACI;QADoC,2IAAW,eAAW;QAO1D,2EACI;QAAA,2EACI;QAAA,4EAA+B;QAAA,oEAA0B;QAAA,4DAAO;QACpE,4DAAM;QACN,iFAIJ;QAJW,gMAAiC;QAAxC,4DAIJ;QACZ,4DAAM;QACN,2EACgB;QAAA,2EACI;QAAA,4EAA+B;QAAA,oEAA0B;QAAA,4DAAO;QACpE,4DAAM;QACN,iFAIA;QAJO,mMAAoC;QAA3C,4DAIA;QAChB,4DAAM;QAcM,sEAEM;QACF,2EACP;QAAA,8EAAmI;QAA3H,uIAAW,eAAW,IAAC;QAAoG,iEAAK;QAAA,4DAAS;QACnJ,4DAAM;QACL,4DAAO;QACX,4DAAM;QAEtB,2EACC;QAAA,2EACC;QAAA,oFAAuB;QAAA,yEAAiC;QAAA,oEAAQ;QAAA,4DAAI;QACrE,4DAAM;QACN,2EACC;QAAA,yEAAmB;QAAA,iFAAqB;QAAA,4DAAI;QAC7C,4DAAM;QACP,4DAAM;QACP,4DAAM;QACP,4DAAM;QApEF,4DACM;;;;;QAqBsC,2DAAmD;QAAnD,mGAAmD;QAD9D,4FAAiC;QAWnB,0DAAyD;QAAzD,mGAAyD;QADvE,+FAAoC;QAuBjB,0DAAmC;QAAnC,sFAAmC;;6FD7ChF,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGE;;;;;AACpD,4DAA4D;AASrD,MAAM,gBAAgB;IAE3B,YAAoB,YAA0B,EAAU,MAAa;QAAjD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAO;QADrE,UAAK,GAAU,UAAU,CAAC;QAE1B,aAAQ,GAAG,IAAI,+DAAS,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IADO,CAAC;IAG1E,QAAQ;IAER,CAAC;IACD,OAAO;QAEL,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;QACxC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,KAAK,CAAC,SAAS,CAAC,CAAC;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;;gFAdU,gBAAgB;gGAAhB,gBAAgB;QCb7B,yEACI;QAAA,0EACI;QADE,4IAAY,aAAS,IAAC;QACxB,yEACI;QAAA,uDACJ;QAAA,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,2EACI;QAAA,wEACI;QAAA,qEACI;QAAA,qEAAI;QAAA,yEAAO;QAAA,mEAAO;QAAA,4DAAQ;QAAA,4DAAK;QAC/B,sEAAI;QAAA,4EAA+D;QAAhC,8LAA8B;QAA7D,4DAA+D;QAAA,4DAAK;QAC5E,4DAAK;QAEL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,qEAAS;QAAA,4DAAQ;QAAA,4DAAK;QACjC,sEAAI;QAAA,4EAAmE;QAAlC,gMAAgC;QAAjE,4DAAmE;QAAA,4DAAK;QAChF,4DAAK;QAEL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QAAA,4DAAK;QAC7B,sEAAI;QAAA,4EAAmE;QAAlC,gMAAgC;QAAjE,4DAAmE;QAAA,4DAAK;QAChF,4DAAK;QAEL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAAA,4DAAK;QACnC,sEAAI;QAAA,4EAAqE;QAApC,kMAAkC;QAAnE,4DAAqE;QAAA,4DAAK;QAClF,4DAAK;QAEL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,4EAAgB;QAAA,4DAAQ;QAAA,4DAAK;QACxC,sEAAI;QAAA,6EAAsE;QAArC,mMAAmC;QAApE,4DAAsE;QAAA,4DAAK;QACnF,4DAAK;QAML,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,2EAAe;QAAA,4DAAQ;QAAA,4DAAK;QACvC,sEAAI;QAAA,6EAAuE;QAApC,kMAAkC;QAArE,4DAAuE;QAAA,4DAAK;QACpF,4DAAK;QACL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,yEAAa;QAAA,4DAAQ;QAAA,4DAAK;QACrC,sEAAI;QAAA,6EAAoE;QAAlC,gMAAgC;QAAlE,4DAAoE;QAAA,4DAAK;QACjF,4DAAK;QACL,sEACI;QAAA,iEAAS;QACT,sEAAI;QAAA,wEAAqC;QAAA,4DAAK;QAClD,4DAAK;QACT,4DAAQ;QACZ,4DAAQ;QAEZ,4DAAM;QACV,4DAAM;QACV,4DAAO;QAEX,4DAAM;;QAtDM,0DACJ;QADI,qFACJ;QAOuD,2DAA8B;QAA9B,wFAA8B;QAK5B,0DAAgC;QAAhC,0FAAgC;QAKhC,0DAAgC;QAAhC,0FAAgC;QAKhC,0DAAkC;QAAlC,4FAAkC;QAKlC,0DAAmC;QAAnC,6FAAmC;QASjC,0DAAkC;QAAlC,4FAAkC;QAInC,0DAAgC;QAAhC,0FAAgC;;6FD/BrF,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;AAQ3C,MAAM,iBAAiB;IAG5B,YAAoB,KAAkB,EAC5B,OAAc;QADJ,UAAK,GAAL,KAAK,CAAa;QAC5B,YAAO,GAAP,OAAO,CAAO;QAHzB,qBAAgB,GAAG,EAAC,KAAK,EAAC,EAAE,EAAC,QAAQ,EAAC,EAAE,EAAC,CAAC;IAGb,CAAC;IAE7B,QAAQ;IACR,CAAC;IAED,YAAY;QACX,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC;aAC7C,SAAS,CACR,GAAG,GAAE;YACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;YAChB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QACjC,CAAC,EACH,GAAG,GAAE,QAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CACtB;IACF,CAAC;;kFAnBU,iBAAiB;iGAAjB,iBAAiB;QCR9B,gEAAI;QAAA,gEAAI;QAAA,gEAAI;QAAA,wEAAyI;QAAA,mEAAQ;QAAA,4DAAK;QAAA,gEAAI;QAAA,gEAAI;QAAA,gEACpK;QAAA,yEACM;QAAA,yEACI;QAAA,sEAA2C;QAC3C,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,qEACJ;QAAA,4DAAM;QACV,4DAAM;QACN,0EACI;QAAA,+EACI;QADqC,8IAAW,kBAAc;QAO9D,2EACI;QAAA,2EACI;QAAA,4EAA+B;QAAA,oEAA0B;QAAA,4DAAO;QACpE,4DAAM;QACN,iFAGA;QAHO,sMAAoC;QAA3C,4DAGA;QACJ,4DAAM;QAClB,2EACgB;QAAA,2EACI;QAAA,4EAA+B;QAAA,oEAA0B;QAAA,4DAAO;QACpE,4DAAM;QACN,iFAEA;QAFO,yMAAuC;QAA9C,4DAEA;QAChB,4DAAM;QAcM,2EACI;QAAA,2EACI;QAAA,wEACA;QACJ,4DAAM;QACV,4DAAM;QACF,2EACP;QAAA,8EAAqI;QAA7H,0IAAW,kBAAc,IAAC;QAAmG,oEAAQ;QAAA,4DAAS;QACxJ,4DAAM;QACL,4DAAO;QACX,4DAAM;QAEN,2EACI;QAAA,2EACG;QAAA,oFAAuB;QAAA,yEAA8B;QAAA,iEAAK;QAAA,4DAAI;QACjE,4DAAM;QACN,2EACI;QAAA,yEAAY;QAAA,iFAAqB;QAAA,4DAAI;QACzC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACd,4DAAM;QACN,4DAAM;;;;;QA/CmC,2DAAmD;QAAnD,mGAAmD;QAD7D,+FAAoC;QAUvB,0DAAyD;QAAzD,mGAAyD;QADtE,kGAAuC;QAwBlB,0DAAmC;QAAnC,sFAAmC;;6FD/ClF,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAGkB;;;;;AAO7D,MAAM,kBAAkB;IAG7B,YAAoB,YAA0B,EAAU,MAAa;QAAjD,iBAAY,GAAZ,YAAY,CAAc;QAAU,WAAM,GAAN,MAAM,CAAO;QAFrE,UAAK,GAAU,YAAY,CAAC;QAG5B,eAAU,GAAG,IAAI,4EAAW,CAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAAC;IADuB,CAAC;IAG1E,QAAQ;IACR,CAAC;IAED,SAAS;QAEP,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;QAC5C,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,KAAK,CAAC,SAAS,CAAC,CAAC;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;;oFAfU,kBAAkB;kGAAlB,kBAAkB;QCV/B,yEACI;QAAA,0EACI;QADE,8IAAY,eAAW,IAAC;QAC1B,yEACI;QAAA,uDACJ;QAAA,4DAAM;QACN,yEACI;QAAA,yEACI;QAAA,2EACI;QAAA,wEAEI;QAAA,qEACI;QAAA,qEAAI;QAAA,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAAA,4DAAK;QACnC,sEAAI;QAAA,4EAAuE;QAAtC,sMAAoC;QAArE,4DAAuE;QAAA,4DAAK;QACpF,4DAAK;QAEL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAAA,4DAAK;QACnC,sEAAI;QAAA,4EAAuE;QAAtC,sMAAoC;QAArE,4DAAuE;QAAA,4DAAK;QACpF,4DAAK;QAEL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,uEAAW;QAAA,4DAAQ;QAAA,4DAAK;QACnC,sEAAI;QAAA,4EAAwE;QAAvC,uMAAqC;QAAtE,4DAAwE;QAAA,4DAAK;QACrF,4DAAK;QAEL,sEACI;QAAA,sEAAI;QAAA,yEAAO;QAAA,2EAAe;QAAA,4DAAQ;QAAA,4DAAK;QACvC,sEAAI;QAAA,4EAAsE;QAApC,oMAAkC;QAApE,4DAAsE;QAAA,4DAAK;QACnF,4DAAK;QACL,sEACI;QAAA,iEAAS;QACT,sEAAI;QAAA,wEAAqC;QAAA,4DAAK;QAClD,4DAAK;QACT,4DAAQ;QACZ,4DAAQ;QAEZ,4DAAM;QACV,4DAAM;QACV,4DAAO;QAEX,4DAAM;;QArCM,0DACJ;QADI,qFACJ;QAQyD,2DAAoC;QAApC,8FAAoC;QAKpC,0DAAoC;QAApC,8FAAoC;QAKpC,0DAAqC;QAArC,+FAAqC;QAKpC,0DAAkC;QAAlC,4FAAkC;;6FDjBvF,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAKZ;AACK;;;AAQ7B,MAAM,WAAW;IAKtB,gBAAgB;IAChB,YAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH5B,YAAO,GAAC,4BAA4B,CAAC;IAGL,CAAC;IAC1C,QAAQ,CAAC,IAAW;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAC,IAAI,CAAC;IAC5C,CAAC;IACH,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAErC,CAAC;;sEAbY,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAHV,MAAM;6FAGP,WAAW;cAJvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aAEnB;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAAoD;AAEP;;AAKtC,MAAM,uBAAuB;IAElC,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAE3C,SAAS,CAAC,GAAG,EAAC,IAAI;QAChB,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,yDAAW,CAAC;QAChD,IAAI,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC;YAC3B,UAAU,EAAE;gBACV,aAAa,EAAE,UAAU,WAAW,CAAC,QAAQ,EAAE,EAAE;aAClD;SACF,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;IAClC,CAAC;;8FAZU,uBAAuB;0GAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;6FAEP,uBAAuB;cAHnC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from 'src/app/auth.guard';\n\nimport { ContactComponent } from './component/contact/contact.component';\nimport { EditBookComponent } from './component/edit-book/edit-book.component';\nimport { LoginComponent} from './component/login/login.component';\nimport{ RegisterComponent} from './component/register/register.component';\nimport { HomeComponent} from './component/home/home.component';\nimport { BookListComponent } from './component/book-list/book-list.component';\nimport { NewBookComponent } from './component/new-book/new-book.component';\nimport { NewAuthorComponent } from './new-author/new-author.component';\nimport { EditAuthorComponent } from './component/edit-author/edit-author.component'\n\nimport{ BookComponent} from './component/book/book.component';\n\nconst routes: Routes = [\n  { path:'contact' ,component:ContactComponent},\n  { path:'login' ,component:LoginComponent},\n  { path:'register' ,component:RegisterComponent},\n  { path:'home' ,component:HomeComponent},\n  {path:'edit-book',component:EditBookComponent,canActivate: [AuthGuard]},\n  {path:'book-list',component:BookListComponent,canActivate: [AuthGuard]},\n  {path:'add-book',component:NewBookComponent,canActivate: [AuthGuard]},\n  {path:'add-author',component:NewAuthorComponent,canActivate: [AuthGuard]},\n  {path:'edit-author',component:EditAuthorComponent,canActivate: [AuthGuard]},\n  {path:'authors',component:BookComponent}\n ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Libra';\n  constructor(public _authService:AuthService,private _router:Router){}\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\" >\n    <a class=\"navbar-brand\" routerLink=\"/\">Libra</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/book-list\" *ngIf=\"_authService.loggedInUser()||_authService.loggedInAdmin()\" routerLinkActive=\"active\">Books</a>\n        </li>\n     \n       <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"/add-book\" *ngIf=\"_authService.loggedInAdmin()\" routerLinkActive=\"active\">Add Book</a>\n        </li>\n      \n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"/authors\" *ngIf=\"_authService.loggedInUser()||_authService.loggedInAdmin()\" routerLinkActive=\"active\">Authors</a>\n        </li>\n\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" routerLink=\"/add-author\" *ngIf=\"_authService.loggedInAdmin()\" routerLinkActive=\"active\">Add Author</a>\n        </li>\n    \n        <!-- <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/contact\" routerLinkActive=\"active\">Contact</a>\n        </li> -->\n     \n     </ul>\n\n \n\n      <ul class =\"navbar-nav\">\n       \n        <a class=\"nav-link\" *ngIf=\"!_authService.loggedIn()\" routerLink=\"/login\" routerLinkActive=\"active\">Login</a>\n        <a class=\"nav-link\"  *ngIf=\"!_authService.loggedIn()\" routerLink=\"/register\" routerLinkActive=\"active\">Register</a>\n        <a class=\"nav-link\" style=\"cursor:pointer\"  *ngIf=\"_authService.loggedIn()\" (click)=\"_authService.logoutUser()\">Logout</a>\n      </ul>\n      \n   \n\n    </div>\n  </nav>\n  <app-home></app-home>\n<router-outlet></router-outlet>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule,  ReactiveFormsModule } from '@angular/forms'\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BooksService } from './books.service';\nimport { AuthGuard } from './auth.guard';\n\nimport { AuthService } from './auth.service';\nimport { TokenInterceptorService } from './token-interceptor.service';\n\nimport { ContactComponent } from './component/contact/contact.component';\n\nimport { HeaderComponent } from './component/header/header.component';\nimport { HomeComponent } from './component/home/home.component';\n\nimport { RegisterComponent } from './component/register/register.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { BookListComponent } from './component/book-list/book-list.component';\nimport { NewBookComponent } from './component/new-book/new-book.component';\nimport { EditBookComponent } from './component/edit-book/edit-book.component';\nimport { BookComponent } from './component/book/book.component';\nimport { BookService } from './shared/book.service';\nimport { NewAuthorComponent } from './new-author/new-author.component';\nimport {EditAuthorComponent} from './component/edit-author/edit-author.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactComponent,\n    HeaderComponent,\n    HomeComponent,\n    RegisterComponent,\n    LoginComponent,\n    BookListComponent,\n    NewBookComponent,\n    EditBookComponent,\n    BookComponent,\n    NewAuthorComponent,\n    EditAuthorComponent\n\n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule\n    \n  ],\n  providers: [AuthService,AuthGuard,BooksService,BookService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi:true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService} from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n constructor(private _authService:AuthService,\n           private _router:Router) {}\n           canActivate(): boolean{\n             if(this._authService.loggedIn()){\n               return true\n             }\n             else{\n               this._router.navigate(['/login'])\n               return false\n             }\n\n           }\n\n  \n}\n\n// canActivate():boolean\n// {\n//     if (this._authService.loggedInAdmin()) {\n//     console.log('true');\n//     return true;\n//   }\n//   else {\n//     console.log('you have to be an admin to view this page!!');\n//     alert('Admin privileges denied!!')\n//     this._router.navigate(['/login']);\n//   }\n// }\n\n// }\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n   private _registerUrl = \"/api/register\";\n   \n   private _loginUrl    =    \"/api/login\";\n\n  \n  constructor(private http: HttpClient, private _router: Router) { }\n  \n  registerUser(user){\n   return this.http.post<any>(this._registerUrl,user)\n  }\n  loginUser(user){\n   return this.http.post<any>(this._loginUrl,user)\n  }\n  loggedIn(){\n    return !!localStorage.getItem('token')\n  }\nloggedInAdmin(){\n  if(localStorage.getItem('token')=='admin'){\n    return true;\n}\n  else{\n    return false;\n  }\n\n}\nloggedInUser(){\n  if(localStorage.getItem('token')=='user'){\n    return true;\n}\n  else{\n    return false;\n  }\n\n}\n  logoutUser(){\n    localStorage.removeItem('token')\n    this._router.navigate(['/'])\n  }\n  getToken(){\n    return localStorage.getItem('token')\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BookModel } from '../app/component/book-list/book.model';\nimport { AuthorModel } from '../app/component/book/author.model';\n\nimport {AuthService} from 'src/app/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooksService {\n   private book:BookModel;\n   private author:AuthorModel;\n\n\n  constructor(private http:HttpClient, private authService:AuthService) { }\n  getBooks(){\n    return this.http.get(\"/api/books\");\n  }\n  getAuthors(){\n    return this.http.get(\"/api/authors\");\n  }\n\n  newBook(item){\n    return this.http.post(\"/api/insert\",{\"book\":item})\n    .subscribe(data=>{console.log(data)})\n  }\n  newAuthor(item){\n    return this.http.post(\"/api/insertauth\",{\"author\":item})\n    .subscribe(data=>{console.log(data)})\n  }\n\n  editBook(item)\n  {\n    return this.http.post(\"/api/edit\",{\"book\":item})\n    .subscribe(data=>{console.log(data)})\n\n  }\n  editAuthor(item)\n  {\n    return this.http.post(\"/api/editauth\",{\"author\":item})\n    .subscribe(data=>{console.log(data)})\n\n  }\n\n  setter(book){\n    console.log(\"settercalled\")\n\n    this.book=book;\n    console.log(book);\n  }\n  setterauth(author){\n    console.log(\"settercalled\")\n\n    this.author=author;\n    console.log(author);\n  }\n\n  hi(){\n    return this.book;\n  }\n  hii(){\n    return this.author;\n  }\n\n  delete(book){\n    console.log(\"delete clicked\")\n    return this.http.post(\"/api/delete\",{\"book\":book})\n    .subscribe(data=>{console.log(data)})\n   \n  }\n  deleteauth(author){\n    console.log(\"delete clicked\")\n    return this.http.post(\"/api/deleteauth\",{\"author\":author})\n    .subscribe(data=>{console.log(data)})\n   \n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { BookModel } from  './book.model';\nimport { BooksService } from '../../books.service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AuthService } from '../../auth.service';\n\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.css']\n})\nexport class BookListComponent implements OnInit {\n   title:String = \"Book List\";\n  books:BookModel[];\n  imageWidth: number=100;\n  imageMargin: number=20;\n  showImage: boolean = false;\n   constructor(private booksService:BooksService,private router:Router,public _authService:AuthService){\n\n   }\n   toggleImage(): void{\n     this.showImage = !this.showImage;\n   }\n   \n   edit(book){\n    this.booksService.setter(book);\n     console.log('function called')\n     this.router.navigate(['/edit-book'])\n   }\n \n   delete(book){\n     this.booksService.delete(book)\n     location.reload();\n     \n   } \n\n  ngOnInit(): void {\n    this.booksService.getBooks()\n    .subscribe((data)=>{\n      this.books=JSON.parse(JSON.stringify(data));\n    },\n    (err)=>{\n      if(err instanceof HttpErrorResponse){\n        if(err.status==500){this.router.navigate(['/login'])}\n       }\n    }\n    )\n  }\n}\n\n","<div class='card'>\n    <div class='card-header'>\n        {{title}}\n\n    </div>\n    <div class='card-body'>\n        <div class='table-responsive'>\n            <table class='table'>\n                <thead>\n                    <tr>\n                        <th>\n                            \n                        </th>\n                        <th>Book Name</th>\n                        <th>Genre</th>\n                        <th>Author</th>\n                        <th>About</th>\n                        <th>5 Star Rating</th>\n                        <th *ngIf=\"_authService.loggedInAdmin()\">Action</th>\n                       \n                    </tr>\n                </thead>\n                <tbody>\n                   <tr *ngFor='let book of books'>\n                       <td><img [src]='book.imageUrl'\n                        [title]='book.bookName'\n                        [style.width.px]= 'imageWidth'\n                        [style.margin.px]='imageMargin'>\n                    </td>\n                    <td>{{ book.bookName }}</td>\n                    <td>{{ book.bookCode }}</td>\n                    <td>{{ book.authorName }}</td>\n                    <td>{{ book.description }}</td>\n                    <td>{{ book.starRating }}</td>\n\n                    <td>\n                        <!-- <a href=\"/buy\" *ngIf=\"_authService.loggedInUser()\" class=\"btn btn-primary\">Buy</a> -->\n                        <button   *ngIf=\"_authService.loggedInAdmin()\" (click)= \"edit(book)\" class=\"btn btn-success\" style=\"background-color: #0070ff;\">Edit</button>\n                        <button *ngIf=\"_authService.loggedInAdmin()\" (click) = \"delete(book)\"  class=\"btn btn-danger\" style=\"background-color: #ffb400;\">Delete</button>\n\n                    </td>\n                  \n                   </tr>\n                </tbody>\n            </table>\n        </div>\n\n    </div>\n\n    \n</div>\n","export class BookModel{\n    constructor(\n    public bookId : number,\n    public bookName : string,\n    public bookCode : string,\n    public authorName : string,\n    public description : string,\n    public price : number,\n    public starRating : number,\n    public imageUrl : string){}\n}","export class AuthorModel{\n    constructor(\n    public authorName : string,\n    public majorworks : string,\n    public description : string,\n    public imageUrl : string){}\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthorModel } from  './author.model';\nimport { BooksService } from '../../books.service';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AuthService } from '../../auth.service';\n\ndeclare var M: any;\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent implements OnInit {\n  title:String = \"Authors List\";\n  authors:AuthorModel[];\n  imageWidth: number=100;\n  imageMargin: number=20;\n  showImage: boolean = false;\n\n  constructor(private booksService:BooksService,private router:Router,public _authService:AuthService) { }\n\n  toggleImage(): void{\n    this.showImage = !this.showImage;\n  }\n  \n  editAuthor(author){\n   this.booksService.setterauth(author);\n    console.log('function called')\n    this.router.navigate(['/edit-author'])\n  }\n\n  deleteauth(author){\n    this.booksService.deleteauth(author)\n    location.reload();\n    \n  }\n\n  ngOnInit(): void {\n    this.booksService.getAuthors()\n    .subscribe((data)=>{\n      this.authors=JSON.parse(JSON.stringify(data));\n    },\n    (err)=>{\n      if(err instanceof HttpErrorResponse){\n        if(err.status==500){this.router.navigate(['/login'])}\n       }\n    }\n    )\n  }\n    \n}\n","<div class='card'>\n    <div class='card-header'>\n        {{title}}\n\n    </div>\n    <div class='card-body'>\n        <div class='table-responsive'>\n            <table class='table'>\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>Author Name</th>\n                        <th>About</th>\n                        <th>Major Works</th>\n                       \n                    </tr>\n                </thead>\n                <tbody>\n                   <tr *ngFor='let author of authors'>\n                       <td><img [src]='author.imageUrl'\n                        [title]='author.author'\n                        [style.width.px]= 'imageWidth'\n                        [style.margin.px]='imageMargin'>\n                    </td>\n                    <td>{{ author.authorName }}</td>\n                    <td>{{ author.majorworks }}</td>\n                    <td>{{ author.description }}</td>\n\n                    <td>\n                        <button   *ngIf=\"_authService.loggedInAdmin()\" (click)= \"editAuthor(author)\" class=\"btn btn-success\" style=\"background-color: #0070ff;\">Edit</button>\n                        <button *ngIf=\"_authService.loggedInAdmin()\" (click) = \"deleteauth(author)\"  class=\"btn btn-danger\" style=\"background-color: #ffb400;\">Delete</button>\n\n                    </td>\n                  \n                   </tr>\n                </tbody>\n            </table>\n        </div>\n\n    </div>\n\n    \n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n    <!-- Page Content -->\n    <body>\n        <div class=\"container\">\n            <div class=\"contact-details\">\n              <h2><u>Contact Details</u></h2>\n              <br />\n              <h4>Website related issues / enquiries</h4> <br />\n              \n              <p class=\"bold\"><b>Site Administrator:</b>RAJANI M R</p>\n              <p class=\"bold\"><b>Email: </b><a href=\"gmail.com\">bookstore.com</a></p>\n              <p class=\"bold\"><b>Telephone: </b><span></span><a href=\"tel:04712404813\">91 7356670922</a> <br/>\n    \n              <br />\n    \n              <h4>Company Address</h4>\n              <br />\n    \n              <p class=\"bold\"><b> Address: </b>123 Street</p>\n              <p class=\"bold\"><b>City: </b> TVM</p>\n              <p class=\"bold\"><b>Postcode: </b>695501</p>\n            </div>\n        </div>\n    \n     \n        </body>\n        ","import { Component, OnInit } from '@angular/core';\nimport { AuthorModel } from '../book/author.model';\nimport { BooksService } from 'src/app/books.service';\nimport { Router } from '@angular/router';\nimport {AuthService} from 'src/app/auth.service';\n\n@Component({\n  selector: 'app-edit-author',\n  templateUrl: './edit-author.component.html',\n  styleUrls: ['./edit-author.component.css']\n})\nexport class EditAuthorComponent implements OnInit {\n  authorItem = new AuthorModel(null,null,null,null);\n\n  constructor(private booksService:BooksService,private router:Router,private authService:AuthService) { }\n\n  ngOnInit(): void {\n    this.authorItem = this.booksService.hii();\n  }\n\n  editAuthor(){\n    this.booksService.editAuthor(this.authorItem)\n    console.log(\"hi for, editauthor and the corresponding author name is \" + this.authorItem.authorName);\n    alert(\"edited\")\n    this.router.navigate(['/authors'])\n  }\n\n}\n","<div class='card'>\n    <form (ngSubmit)=\"editAuthor()\">\n        <div class='card-header'>\n          \n        </div>\n        <div class='card-body'>\n            <div class='table-responsive'>\n                <table class='table'>\n                    <tbody>\n    \n\n                        <tr>\n                            <td><label>Author Name</label></td>\n                            <td><input type=\"text\" name=\"a_name\" [(ngModel)] =\"authorItem.authorName\"/></td>\n                        </tr>\n\n                        <tr>\n                            <td><label>Major Works</label></td>\n                            <td><input type=\"text\" name=\"a_code\" [(ngModel)] =\"authorItem.majorworks\"/></td>\n                        </tr>\n\n          \n                        <tr>\n                            <td><label>About</label></td>\n                            <td><input type=\"text\" name=\"a_desc\" [(ngModel)] =\"authorItem.description\"/></td>\n                        </tr>\n                        <tr>\n                            <td><label>Author imageUrl</label></td>\n                            <td><input type=\"text\" name=\"a_image\" [(ngModel)] =\"authorItem.imageUrl\"/></td>\n                        </tr>\n                        <tr>\n                            <td></td>\n                            <td><input type=\"submit\" value=\"Submit\"/></td>\n                        </tr>\n                    </tbody>\n                </table>\n\n            </div>\n        </div>\n    </form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BookModel } from '../book-list/book.model';\nimport { BooksService } from 'src/app/books.service';\nimport { Router } from '@angular/router';\nimport {AuthService} from 'src/app/auth.service';\n\n@Component({\n  selector: 'app-edit-book',\n  templateUrl: './edit-book.component.html',\n  styleUrls: ['./edit-book.component.css']\n})\nexport class EditBookComponent implements OnInit {\n  bookItem = new BookModel(null,null,null,null,null,null,null,null);\n\n  constructor(private booksService:BooksService,private router:Router,private authService:AuthService) { }\n\n  ngOnInit(): void {\n    this.bookItem = this.booksService.hi();\n  }\n\n  editBook(){\n    this.booksService.editBook(this.bookItem)\n    console.log(\"hi for, editbook and the corresponding book name is \" + this.bookItem.bookName);\n    alert(\"edited\")\n    this.router.navigate(['/book-list'])\n  }\n\n}","<div class='card'>\n    <form (ngSubmit)=\"editBook()\">\n        <div class='card-header'>\n          \n        </div>\n        <div class='card-body'>\n            <div class='table-responsive'>\n                <table class='table'>\n                    <tbody>\n                        <tr>\n                            <td><label>Book Id</label></td>\n                            <td><input type=\"text\" name=\"b_id\" [(ngModel)] =\"bookItem.bookId\"/></td>\n                        </tr>\n\n                        <tr>\n                            <td><label>Book Name</label></td>\n                            <td><input type=\"text\" name=\"b_name\" [(ngModel)] =\"bookItem.bookName\"/></td>\n                        </tr>\n\n                        <tr>\n                            <td><label>Genre</label></td>\n                            <td><input type=\"text\" name=\"b_code\" [(ngModel)] =\"bookItem.bookCode\"/></td>\n                        </tr>\n\n                        <tr>\n                            <td><label>Author Name</label></td>\n                            <td><input type=\"text\" name=\"b_auth\" [(ngModel)] =\"bookItem.authorName\"/></td>\n                        </tr>\n\n                        <tr>\n                            <td><label>Book Description</label></td>\n                            <td><input type=\"text\" name=\"b_desc\" [(ngModel)] =\"bookItem.description\"/></td>\n                        </tr>\n                        <tr>\n                            <td><label>Book StarRating</label></td>\n                            <td><input type=\"text\" name=\"b_rating\" [(ngModel)] =\"bookItem.starRating\"/></td>\n                        </tr>\n                        <tr>\n                            <td><label>Book imageUrl</label></td>\n                            <td><input type=\"text\" name=\"b_image\" [(ngModel)] =\"bookItem.imageUrl\"/></td>\n                        </tr>\n                        <tr>\n                            <td></td>\n                            <td><input type=\"submit\" value=\"Submit\"/></td>\n                        </tr>\n                    </tbody>\n                </table>\n\n            </div>\n        </div>\n    </form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  constructor(private router:Router,private authservice:AuthService) { }\n\n  title:String = \"Libra\";\n  ngOnInit() {\n  }\n\n\n}\n","<h1>{{title}}</h1>\n<app-header></app-header>\n<app-book></app-book>\n<router-outlet></router-outlet>\n\n<div class = 'card-header'>\n    <a routerLink='/'>Libra</a>\n    <a routerLink='/book-list'>Books</a>\n    <a routerLink='/authors'>Buy</a>\n    <a routerLink='/add-book'>Add Book</a>\n    <a routerLink='/search'>Search</a>\n    <a routerLink='/login'> Login</a>\n    <a routerLink='/signup'>Signup</a>\n  \n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-white \" id=\"mainjumbo\" >\n        <div class=\"container paddingcorrection mt-5\">\n            <!-- <h1>Library</h1> -->\n            <div class=\"d-flex\">\n                <span class=\" display-1  font-weight-bold\" id=\"mainHeading\">\n                     <div>Welcome to Libra</div>\n                </span>               \n            </div>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginUserData = {email:\"\",password:\"\"};\n  constructor(private _authService: AuthService,\n    private _router:Router ) { }\n\n  ngOnInit() {\n  }\n  loginUser(){\n\n\nconsole.log(this.loginUserData.email)\nconsole.log(this.loginUserData.password)\nif(this.loginUserData.email==\"useradmin@gmail.com\" && this.loginUserData.password==\"Useradmin123!\"){\n  localStorage.setItem('token','admin')\n  this._router.navigate(['/'])\n}\nelse{\n  this._authService.loginUser(this.loginUserData)\n  .subscribe(\n    res=>{\n      console.log(res.token)\n      localStorage.setItem('token',res[\"token\"])\n      this._router.navigate(['/'])\n\n    },\n    err => console.log(err)\n  )\n}\n\n\n\n  }\n}\n\n  // loginUserData = {email:\"\",password:\"\"};\n  // constructor(private _auth: AuthService,\n  //   private _router:Router ) { }\n\n  // ngOnInit() {\n  // }\n  // loginUser(){\n  //   this._auth.loginUser(this.loginUserData)\n  //   .subscribe(\n  //     res=>{\n  //       console.log(res)\n  //       localStorage.setItem('token',res[\"token\"])\n     \n  //       this._router.navigate(['/'])\n  //       },\n  //     err => console.log(err)\n  //   )\n \n  // }\n\n\n\n\n\n\n\n","<br><br><br><h1 style=\"color: rgb(255, 255, 255);text-align: center;font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;font-weight: bold;\">Login</h1><br><br><br>\n      <div class=\"container h-100\">\n            <div class=\"d-flex justify-content-center h-100\">\n            <span class=\"anchor\" id=\"formLogin\"></span>\n                <div class=\"user_card\">\n                    <div class=\"d-flex justify-content-center\">\n                        <div class=\"brand_logo_container\">\n                            <img src=\"assets/image/pika3.gif\" class=\"brand_logo\" alt=\"Logo\">\n                        </div>\n                    </div>\n                    <div class=\"d-flex justify-content-center form_container\">\n                        <form class =\"form\" #userLogin='ngForm' (ngSubmit)=loginUser()>\n                            <!-- <div class=\"input-group mb-3\">\n                                <div class=\"input-group-append\">\n                                    <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n                                </div>\n                                <input type=\"text\" name=\"\" class=\"form-control input_user\" value=\"\" placeholder=\"username\">\n                            </div> -->\n                            <div class=\"input-group mb-2\">\n                                <div class=\"input-group-append\">\n                                    <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n                                </div>\n                                <input [(ngModel)]=\"loginUserData.email\" type=\"text\" name=\"email\" class=\"form-control input_pass\" value=\"\"\n                                 #email=\"ngModel\" [class.is-invalid]=\"email.invalid && email.touched\" value=\"\" placeholder=\"Email-id\" \n                                pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" required>\n                               \n                            <!-- <small class=\"text-danger\"[class.d-none]=\"email.valid || email.touched\">Enter a valid email</small> -->\n                </div>\n                <div class=\"input-group mb-2\">\n                                <div class=\"input-group-append\">\n                                    <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n                                </div>\n                                <input [(ngModel)]=\"loginUserData.password\" type=\"password\" name=\"password\"  class=\"form-control input_pass\" value=\"\" placeholder=\"password\" \n                                 #password=\"ngModel\" [class.is-invalid]=\"password.invalid && password.touched\" \n                                  pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$\"  required>\n                            \n                                <!-- <small class= \"text-danger\" [class.d-none]=\"password.valid || password.touched\">Enter a valid password</small> -->\n                </div>\n                \n                <!-- <div class=\"input-group mb-2\">\n                                <div class=\"input-group-append\">\n                                    <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n                                </div>\n                                <input type=\"re-enter password\" name=\"\" class=\"form-control input_pass\" value=\"\" placeholder=\"re-enter password\">\n                </div> -->\n                <!-- <div class=\"input-group mb-2\">\n                                <div class=\"input-group-append\">\n                                    <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n                                </div>\n                                <input type=\"password\" name=\"\" class=\"form-control input_pass\" value=\"\" placeholder=\"password\">\n                            </div> -->\n                            <div class=\"form-group\">\n                            \n                            </div>\n                                <div class=\"d-flex justify-content-center mt-3 login_container\">\n                         <button (click) = \"loginUser()\"  [disabled]=\"userLogin.form.invalid\" type=\"button\" name=\"button\" class=\"btn btn-success login_btn\">Login</button>\n                       </div>\n                        </form>\n                    </div>\n\t\t\n\t\t\t\t<div class=\"mt-4\">\n\t\t\t\t\t<div class=\"d-flex justify-content-center links\">\n\t\t\t\t\t\tDon't have an account? <a href=\"/register\" class=\"ml-2\">Register</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"d-flex justify-content-center links\">\n\t\t\t\t\t\t<a href=\"register\">Forgot your password?</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>","import { Component, OnInit } from '@angular/core';\nimport { BooksService } from 'src/app/books.service';\nimport { Router } from '@angular/router';\nimport { BookModel } from '../book-list/book.model';\n// import { HttpErrorResponse } from '@angular/common/http';\n \n\n\n@Component({\n  selector: 'app-new-book',\n  templateUrl: './new-book.component.html',\n  styleUrls: ['./new-book.component.css']\n})\nexport class NewBookComponent implements OnInit {\n  title:String = \"Add Book\";\n  constructor(private booksService: BooksService, private router:Router) { }\n  bookItem = new BookModel(null,null,null,null,null,null,null,null);\n\n  ngOnInit() {\n    \n  }\n  AddBook()\n  {\n    this.booksService.newBook(this.bookItem)\n    console.log(\"Called\");\n    alert(\"Success\");\n    this.router.navigate(['/book-list']);\n  }\n}\n//   ngOnInit() {\n//     this._productService.getProducts()\n//     .subscribe(\n//       res =>this.newProduct = res,\n//       err => {\n//         if (err instanceof HttpErrorResponse){\n//           if (err.status === 401){\n//             this._router.navigate(['/login'])\n//           }\n//         }\n//       }\n    \n//     )\n  \n//   }\n\n \n\n","<div class='card'>\n    <form (ngSubmit)=\"AddBook()\">\n        <div class='card-header'>\n            {{title}}\n        </div>\n        <div class='card-body'>\n            <div class='table-responsive'>\n                <table class='table'>\n                    <tbody>\n                        <tr>\n                            <td><label>Book Id</label></td>\n                            <td><input type=\"text\" name=\"b_id\" [(ngModel)] =\"bookItem.bookId\"/></td>\n                        </tr>\n\n                        <tr>\n                            <td><label>Book Name</label></td>\n                            <td><input type=\"text\" name=\"b_name\" [(ngModel)] =\"bookItem.bookName\"/></td>\n                        </tr>\n\n                        <tr>\n                            <td><label>Genre</label></td>\n                            <td><input type=\"text\" name=\"b_code\" [(ngModel)] =\"bookItem.bookCode\"/></td>\n                        </tr>\n\n                        <tr>\n                            <td><label>Author Name</label></td>\n                            <td><input type=\"text\" name=\"b_auth\" [(ngModel)] =\"bookItem.authorName\"/></td>\n                        </tr>\n\n                        <tr>\n                            <td><label>Book Description</label></td>\n                            <td><input type=\"text\" name=\"b_desc\" [(ngModel)] =\"bookItem.description\"/></td>\n                        </tr>\n\n                        <!-- <tr>\n                            <td><label>Book Price</label></td>\n                            <td><input type=\"text\" name=\"b_price\" [(ngModel)] =\"bookItem.price\"/></td>\n                        </tr> -->\n                        <tr>\n                            <td><label>Book starRating</label></td>\n                            <td><input type=\"text\" name=\"b_rating\" [(ngModel)] =\"bookItem.starRating\"/></td>\n                        </tr>\n                        <tr>\n                            <td><label>Book imageUrl</label></td>\n                            <td><input type=\"text\" name=\"b_image\" [(ngModel)] =\"bookItem.imageUrl\"/></td>\n                        </tr>\n                        <tr>\n                            <td></td>\n                            <td><input type=\"submit\" value=\"Submit\"/></td>\n                        </tr>\n                    </tbody>\n                </table>\n\n            </div>\n        </div>\n    </form>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth.service'\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n registerUserData = {email:\"\",password:\"\"};\n\n  constructor(private _auth: AuthService,\n    private _router:Router) { }\n\n  ngOnInit() {\n  }\n\n  registerUser(){\n   this._auth.registerUser(this.registerUserData)\n   .subscribe(\n     res=>{\n       console.log(res)\n       localStorage.setItem('token',res[\"token\"])\n       this._router.navigate(['/login'])\n       },\n     err=>console.log(err)\n   )\n  }\n}\n","<br><br><br><h1 style=\"color: rgb(255, 255, 255);text-align: center;font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;font-weight: bold;\">Register</h1><br><br><br>\n      <div class=\"container h-100\">\n            <div class=\"d-flex justify-content-center h-100\">\n                <span class=\"anchor\" id=\"formLogin\"></span>\n                <div class=\"user_card\">\n                    <div class=\"d-flex justify-content-center\">\n                        <div class=\"brand_logo_container\">\n                            <img src=\"assets/image/pika2.gif\" class=\"brand_logo\" alt=\"Logo\">\n                        </div>\n                    </div>\n                    <div class=\"d-flex justify-content-center form_container\">\n                        <form class = \"form\" #userLogin='ngForm' (ngSubmit)=registerUser()>\n                            <!-- <div class=\"input-group mb-3\">\n                                <div class=\"input-group-append\">\n                                    <span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\n                                </div>\n                                <input type=\"text\" name=\"\" class=\"form-control input_user\" value=\"\" placeholder=\"username\">\n                            </div> -->\n                            <div class=\"input-group mb-2\">\n                                <div class=\"input-group-append\">\n                                    <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n                                </div>\n                                <input [(ngModel)]=\"registerUserData.email\" type=\"text\" name=\"email\" class=\"form-control input_pass\"\n                                #email=\"ngModel\" [class.is-invalid]=\"email.invalid && email.touched\" value=\"\" placeholder=\"Email-id\" \n                                pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" required>\n                                <!-- <small class=\"text-danger\"[class.d-none]=\"email.valid || email.touched\">Enter a valid email</small> -->\n                            </div>\n                <div class=\"input-group mb-2\">\n                                <div class=\"input-group-append\">\n                                    <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n                                </div>\n                                <input [(ngModel)]=\"registerUserData.password\" type=\"password\" name=\"password\"  class=\"form-control input_pass\" value=\"\" placeholder=\"password\"\n                                #password=\"ngModel\" [class.is-invalid]=\"password.invalid && password.touched\"  pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z0-9])(?!.*\\s).{8,15}$\" required>\n                                <!-- <small class= \"text-danger\" [class.d-none]=\"password.valid || password.touched\">Enter a valid password</small> -->\n                </div>\n                \n                <!-- <div class=\"input-group mb-2\">\n                                <div class=\"input-group-append\">\n                                    <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n                                </div>\n                                <input type=\"re-enter password\" name=\"\" class=\"form-control input_pass\" value=\"\" placeholder=\"re-enter password\">\n                </div> -->\n                <!-- <div class=\"input-group mb-2\">\n                                <div class=\"input-group-append\">\n                                    <span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\n                                </div>\n                                <input type=\"password\" name=\"\" class=\"form-control input_pass\" value=\"\" placeholder=\"password\">\n                            </div> -->\n                            <div class=\"form-group\">\n                                <div class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customControlInline\">\n                                    <!-- <label class=\"custom-control-label\" for=\"customControlInline\">Remember me</label> -->\n                                </div>\n                            </div>\n                                <div class=\"d-flex justify-content-center mt-3 login_container\">\n                         <button (click) = \"registerUser()\" [disabled]=\"userLogin.form.invalid\" type=\"button\" name=\"button\" class=\"btn btn-primary login_btn\">Register</button>\n                       </div>\n                        </form>\n                    </div>\n            \n                    <div class=\"mt-4\">\n                        <div class=\"d-flex justify-content-center links\">\n                           Already have an account<a href=\"/login\" class=\"ml-2\">Login</a>\n                        </div>\n                        <div class=\"d-flex justify-content-center links\">\n                            <a href=\"#\">Forgot your password?</a>\n                        </div>\n                    </div>\n                </div>\n        </div>\n        </div>","import { Component, OnInit } from '@angular/core';\nimport { BooksService } from 'src/app/books.service';\nimport { Router } from '@angular/router';\nimport { AuthorModel } from '../../app/component/book/author.model';\n\n@Component({\n  selector: 'app-new-author',\n  templateUrl: './new-author.component.html',\n  styleUrls: ['./new-author.component.css']\n})\nexport class NewAuthorComponent implements OnInit {\n  title:String = \"Add Author\";\n\n  constructor(private booksService: BooksService, private router:Router) { }\n  AuthorItem = new AuthorModel(null,null,null,null);\n\n  ngOnInit(): void {\n  }\n\n  AddAuthor()\n  {\n    this.booksService.newAuthor(this.AuthorItem)\n    console.log(\"Called\");\n    alert(\"Success\");\n    this.router.navigate(['/authors']);\n  }\n\n}\n","<div class='card'>\n    <form (ngSubmit)=\"AddAuthor()\">\n        <div class='card-header'>\n            {{title}}\n        </div>\n        <div class='card-body'>\n            <div class='table-responsive'>\n                <table class='table'>\n                    <tbody>\n                        \n                        <tr>\n                            <td><label>Author Name</label></td>\n                            <td><input type=\"text\" name=\"b_name\" [(ngModel)] =\"AuthorItem.authorName\"/></td>\n                        </tr>\n\n                        <tr>\n                            <td><label>Major Works</label></td>\n                            <td><input type=\"text\" name=\"b_auth\" [(ngModel)] =\"AuthorItem.majorworks\"/></td>\n                        </tr>\n\n                        <tr>\n                            <td><label>Description</label></td>\n                            <td><input type=\"text\" name=\"b_desc\" [(ngModel)] =\"AuthorItem.description\"/></td>\n                        </tr>\n\n                        <tr>\n                            <td><label>Author imageUrl</label></td>\n                            <td><input type=\"text\" name=\"b_image\" [(ngModel)] =\"AuthorItem.imageUrl\"/></td>\n                        </tr>\n                        <tr>\n                            <td></td>\n                            <td><input type=\"submit\" value=\"Submit\"/></td>\n                        </tr>\n                    </tbody>\n                </table>\n\n            </div>\n        </div>\n    </form>\n\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise'\n\nimport { Books } from './books.model';\n\n@Injectable({\n  providedIn: 'root'\n  \n})\nexport class BookService {\n   selectedBook: Books;\n   books:Books[];\n  readonly baseURL=\"http://localhost:3000/book\";\n   \n  // books:Book[];\n  constructor( private http: HttpClient) { }\n  postBook(book: Books){\n      return this.http.post(this.baseURL,book)\n  }\ngetBookList(){\n  return this.http.get(this.baseURL);\n\n}\n}\n","import { Injectable,Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n\n  constructor(private injector: Injector) { }\n\n  intercept(req,next){\n    let authService = this.injector.get(AuthService)\n    let tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${authService.getToken()}`\n      }\n    })\n    return next.handle(tokenizedReq)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}